/*
 * This file is generated by jOOQ.
 */
package org.endeavourhealth;


import org.endeavourhealth.tables.FlywaySchemaHistory;
import org.endeavourhealth.tables.GraphLabel;
import org.endeavourhealth.tables.Node;
import org.endeavourhealth.tables.Quad;
import org.endeavourhealth.tables.records.FlywaySchemaHistoryRecord;
import org.endeavourhealth.tables.records.GraphLabelRecord;
import org.endeavourhealth.tables.records.NodeRecord;
import org.endeavourhealth.tables.records.QuadRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * quadstore.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<GraphLabelRecord> GRAPH_LABEL_PKEY = Internal.createUniqueKey(GraphLabel.GRAPH_LABEL, DSL.name("graph_label_pkey"), new TableField[] { GraphLabel.GRAPH_LABEL.ID }, true);
    public static final UniqueKey<NodeRecord> NODE_PKEY = Internal.createUniqueKey(Node.NODE, DSL.name("node_pkey"), new TableField[] { Node.NODE.ID }, true);
    public static final UniqueKey<QuadRecord> QUAD_PKEY = Internal.createUniqueKey(Quad.QUAD, DSL.name("quad_pkey"), new TableField[] { Quad.QUAD.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<QuadRecord, GraphLabelRecord> QUAD__LABEL_GRAPH_ID_FK = Internal.createForeignKey(Quad.QUAD, DSL.name("label_graph_id_fk"), new TableField[] { Quad.QUAD.LABEL_ID }, Keys.GRAPH_LABEL_PKEY, new TableField[] { GraphLabel.GRAPH_LABEL.ID }, true);
    public static final ForeignKey<QuadRecord, NodeRecord> QUAD__LABEL_ID_FK = Internal.createForeignKey(Quad.QUAD, DSL.name("label_id_fk"), new TableField[] { Quad.QUAD.LABEL_ID }, Keys.NODE_PKEY, new TableField[] { Node.NODE.ID }, true);
    public static final ForeignKey<QuadRecord, NodeRecord> QUAD__OBJECT_ID_FK = Internal.createForeignKey(Quad.QUAD, DSL.name("object_id_fk"), new TableField[] { Quad.QUAD.OBJECT_ID }, Keys.NODE_PKEY, new TableField[] { Node.NODE.ID }, true);
    public static final ForeignKey<QuadRecord, NodeRecord> QUAD__PREDICATE_ID_FK = Internal.createForeignKey(Quad.QUAD, DSL.name("predicate_id_fk"), new TableField[] { Quad.QUAD.PREDICATE_ID }, Keys.NODE_PKEY, new TableField[] { Node.NODE.ID }, true);
    public static final ForeignKey<QuadRecord, NodeRecord> QUAD__SUBJECT_ID_FK = Internal.createForeignKey(Quad.QUAD, DSL.name("subject_id_fk"), new TableField[] { Quad.QUAD.SUBJECT_ID }, Keys.NODE_PKEY, new TableField[] { Node.NODE.ID }, true);
}
