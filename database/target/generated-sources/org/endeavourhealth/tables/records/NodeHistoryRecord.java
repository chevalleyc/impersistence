/*
 * This file is generated by jOOQ.
 */
package org.endeavourhealth.tables.records;


import java.sql.Timestamp;
import java.util.UUID;

import org.endeavourhealth.tables.NodeHistory;
import org.endeavourhealth.udt.records.CodedTextRecord;
import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NodeHistoryRecord extends TableRecordImpl<NodeHistoryRecord> implements Record10<UUID, UUID, UUID, String, CodedTextRecord, Timestamp, Integer, JSONB, JSONB, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>quadstore.node_history.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>quadstore.node_history.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>quadstore.node_history.person_id</code>.
     */
    public void setPersonId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>quadstore.node_history.person_id</code>.
     */
    public UUID getPersonId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>quadstore.node_history.organisation_id</code>.
     */
    public void setOrganisationId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>quadstore.node_history.organisation_id</code>.
     */
    public UUID getOrganisationId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>quadstore.node_history.iri</code>.
     */
    public void setIri(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>quadstore.node_history.iri</code>.
     */
    public String getIri() {
        return (String) get(3);
    }

    /**
     * Setter for <code>quadstore.node_history.name</code>.
     */
    public void setName(CodedTextRecord value) {
        set(4, value);
    }

    /**
     * Getter for <code>quadstore.node_history.name</code>.
     */
    public CodedTextRecord getName() {
        return (CodedTextRecord) get(4);
    }

    /**
     * Setter for <code>quadstore.node_history.effective_date</code>.
     */
    public void setEffectiveDate(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>quadstore.node_history.effective_date</code>.
     */
    public Timestamp getEffectiveDate() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>quadstore.node_history.type</code>.
     */
    public void setType(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>quadstore.node_history.type</code>.
     */
    public Integer getType() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>quadstore.node_history.feeder_audit</code>.
     */
    public void setFeederAudit(JSONB value) {
        set(7, value);
    }

    /**
     * Getter for <code>quadstore.node_history.feeder_audit</code>.
     */
    public JSONB getFeederAudit() {
        return (JSONB) get(7);
    }

    /**
     * Setter for <code>quadstore.node_history.properties</code>.
     */
    public void setProperties(JSONB value) {
        set(8, value);
    }

    /**
     * Getter for <code>quadstore.node_history.properties</code>.
     */
    public JSONB getProperties() {
        return (JSONB) get(8);
    }

    /**
     * Setter for <code>quadstore.node_history.created_ts</code>.
     */
    public void setCreatedTs(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>quadstore.node_history.created_ts</code>.
     */
    public Timestamp getCreatedTs() {
        return (Timestamp) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<UUID, UUID, UUID, String, CodedTextRecord, Timestamp, Integer, JSONB, JSONB, Timestamp> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<UUID, UUID, UUID, String, CodedTextRecord, Timestamp, Integer, JSONB, JSONB, Timestamp> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return NodeHistory.NODE_HISTORY.ID;
    }

    @Override
    public Field<UUID> field2() {
        return NodeHistory.NODE_HISTORY.PERSON_ID;
    }

    @Override
    public Field<UUID> field3() {
        return NodeHistory.NODE_HISTORY.ORGANISATION_ID;
    }

    @Override
    public Field<String> field4() {
        return NodeHistory.NODE_HISTORY.IRI;
    }

    @Override
    public Field<CodedTextRecord> field5() {
        return NodeHistory.NODE_HISTORY.NAME;
    }

    @Override
    public Field<Timestamp> field6() {
        return NodeHistory.NODE_HISTORY.EFFECTIVE_DATE;
    }

    @Override
    public Field<Integer> field7() {
        return NodeHistory.NODE_HISTORY.TYPE;
    }

    @Override
    public Field<JSONB> field8() {
        return NodeHistory.NODE_HISTORY.FEEDER_AUDIT;
    }

    @Override
    public Field<JSONB> field9() {
        return NodeHistory.NODE_HISTORY.PROPERTIES;
    }

    @Override
    public Field<Timestamp> field10() {
        return NodeHistory.NODE_HISTORY.CREATED_TS;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getPersonId();
    }

    @Override
    public UUID component3() {
        return getOrganisationId();
    }

    @Override
    public String component4() {
        return getIri();
    }

    @Override
    public CodedTextRecord component5() {
        return getName();
    }

    @Override
    public Timestamp component6() {
        return getEffectiveDate();
    }

    @Override
    public Integer component7() {
        return getType();
    }

    @Override
    public JSONB component8() {
        return getFeederAudit();
    }

    @Override
    public JSONB component9() {
        return getProperties();
    }

    @Override
    public Timestamp component10() {
        return getCreatedTs();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getPersonId();
    }

    @Override
    public UUID value3() {
        return getOrganisationId();
    }

    @Override
    public String value4() {
        return getIri();
    }

    @Override
    public CodedTextRecord value5() {
        return getName();
    }

    @Override
    public Timestamp value6() {
        return getEffectiveDate();
    }

    @Override
    public Integer value7() {
        return getType();
    }

    @Override
    public JSONB value8() {
        return getFeederAudit();
    }

    @Override
    public JSONB value9() {
        return getProperties();
    }

    @Override
    public Timestamp value10() {
        return getCreatedTs();
    }

    @Override
    public NodeHistoryRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public NodeHistoryRecord value2(UUID value) {
        setPersonId(value);
        return this;
    }

    @Override
    public NodeHistoryRecord value3(UUID value) {
        setOrganisationId(value);
        return this;
    }

    @Override
    public NodeHistoryRecord value4(String value) {
        setIri(value);
        return this;
    }

    @Override
    public NodeHistoryRecord value5(CodedTextRecord value) {
        setName(value);
        return this;
    }

    @Override
    public NodeHistoryRecord value6(Timestamp value) {
        setEffectiveDate(value);
        return this;
    }

    @Override
    public NodeHistoryRecord value7(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public NodeHistoryRecord value8(JSONB value) {
        setFeederAudit(value);
        return this;
    }

    @Override
    public NodeHistoryRecord value9(JSONB value) {
        setProperties(value);
        return this;
    }

    @Override
    public NodeHistoryRecord value10(Timestamp value) {
        setCreatedTs(value);
        return this;
    }

    @Override
    public NodeHistoryRecord values(UUID value1, UUID value2, UUID value3, String value4, CodedTextRecord value5, Timestamp value6, Integer value7, JSONB value8, JSONB value9, Timestamp value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NodeHistoryRecord
     */
    public NodeHistoryRecord() {
        super(NodeHistory.NODE_HISTORY);
    }

    /**
     * Create a detached, initialised NodeHistoryRecord
     */
    public NodeHistoryRecord(UUID id, UUID personId, UUID organisationId, String iri, CodedTextRecord name, Timestamp effectiveDate, Integer type, JSONB feederAudit, JSONB properties, Timestamp createdTs) {
        super(NodeHistory.NODE_HISTORY);

        setId(id);
        setPersonId(personId);
        setOrganisationId(organisationId);
        setIri(iri);
        setName(name);
        setEffectiveDate(effectiveDate);
        setType(type);
        setFeederAudit(feederAudit);
        setProperties(properties);
        setCreatedTs(createdTs);
    }
}
