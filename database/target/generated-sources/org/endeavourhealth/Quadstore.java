/*
 * This file is generated by jOOQ.
 */
package org.endeavourhealth;


import java.util.Arrays;
import java.util.List;

import org.endeavourhealth.tables.FlywaySchemaHistory;
import org.endeavourhealth.tables.GraphLabel;
import org.endeavourhealth.tables.Node;
import org.endeavourhealth.tables.NodeHistory;
import org.endeavourhealth.tables.Quad;
import org.endeavourhealth.tables.QuadHistory;
import org.endeavourhealth.udt.CodePhrase;
import org.endeavourhealth.udt.CodedText;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.UDT;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Quadstore extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>quadstore</code>
     */
    public static final Quadstore QUADSTORE = new Quadstore();

    /**
     * The table <code>quadstore.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>quadstore.graph_label</code>.
     */
    public final GraphLabel GRAPH_LABEL = GraphLabel.GRAPH_LABEL;

    /**
     * The table <code>quadstore.node</code>.
     */
    public final Node NODE = Node.NODE;

    /**
     * The table <code>quadstore.node_history</code>.
     */
    public final NodeHistory NODE_HISTORY = NodeHistory.NODE_HISTORY;

    /**
     * The table <code>quadstore.quad</code>.
     */
    public final Quad QUAD = Quad.QUAD;

    /**
     * The table <code>quadstore.quad_history</code>.
     */
    public final QuadHistory QUAD_HISTORY = QuadHistory.QUAD_HISTORY;

    /**
     * No further instances allowed
     */
    private Quadstore() {
        super("quadstore", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            GraphLabel.GRAPH_LABEL,
            Node.NODE,
            NodeHistory.NODE_HISTORY,
            Quad.QUAD,
            QuadHistory.QUAD_HISTORY
        );
    }

    @Override
    public final List<UDT<?>> getUDTs() {
        return Arrays.asList(
            CodePhrase.CODE_PHRASE,
            CodedText.CODED_TEXT
        );
    }
}
